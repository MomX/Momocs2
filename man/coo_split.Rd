% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/coo_modifyers.R
\name{coo_split}
\alias{coo_split}
\title{Split shapes on speficied coordinates}
\usage{
coo_split(
  x,
  id,
  ldk,
  share,
  from_col = coo,
  ldk_col = ldk,
  to_col = {     {         from_col     } },
  ...
)
}
\arguments{
\item{x}{\link{coo_single}, \link{coo_list} or \link{mom_tbl}}

\item{id}{\code{integer} which is (column row) should be used as the first point}

\item{ldk}{\code{integer} which landkmark should be used as the first point}

\item{share}{\code{logical}  whether to share the slicing coordinate between successive fragments.}

\item{from_col}{colnames from where to get the \link{coo_list}}

\item{ldk_col}{colnames from where to get the \link{coo_list}}

\item{to_col}{colname where to set the result (default to \code{from_col})
and how to name the resulting one (only for \link{mom_tbl} method)}

\item{...}{useless here}
}
\value{
a \link{coo_single}, \link{coo_list} or \link{mom_tbl}
}
\description{
Take a shape with \code{n} coordinates. For each \code{id} or \code{ldk} passed,
the shape will be splitted on the corresponding coordinates
and (\code{length(id/ldk)+1}) fragments returned.
}
\details{
If \code{share=TRUE}, then each slicing coordinates will be shared between consecutive fragments,
that is the last coordinates of the \code{n-th} fragment will also be
the first of the \code{n+1-th} fragment. That is usually what you want, and thus default to \code{TRUE}.

\code{ldk} handling is only supported on \code{mom_tbl} objects.
}
\note{
\code{ldk} happens to be present for \code{coo_single} and \code{coo_list} methods (unlike \code{coo_slide} for instance),
only to please R CMD CHECK S3 consistency \emph{and}
maintain a sensible order for arguments, with \code{share} after \code{coo} and \code{ldk}.
For these classes, it is ignored with a message.
}
\examples{

x <- bot \%>\% pick(1) \%>\% coo_sample(12)
x \%>\% coo_split(id=c(4, 8))
x \%>\% coo_split(id=c(4, 8), share=FALSE)

hearts \%>\%
  dplyr::slice(1:2) \%>\% # for the sake of speed
  coo_split(ldk=2:3)

# then dplyr::rename or Momocs2::coo_select if you want to rename/select columns
}
\seealso{
Have a look to coo_slidegap (todo link when ready) if you have problems with gaps
after slicing around landmarks and/or starting points.

Other coo_modifyers: 
\code{\link{coo_align}()},
\code{\link{coo_center}()},
\code{\link{coo_reflect}},
\code{\link{coo_rev}()},
\code{\link{coo_rotatecenter}()},
\code{\link{coo_rotate}()},
\code{\link{coo_sample_rr}()},
\code{\link{coo_sample}()},
\code{\link{coo_scale}()},
\code{\link{coo_shear}()},
\code{\link{coo_slide}()},
\code{\link{coo_template}()},
\code{\link{coo_trans}()},
\code{\link{coo_trim}()},
\code{\link{coo_up}()}
}
\concept{coo_modifyers}
\concept{split}
