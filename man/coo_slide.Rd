% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/coo_modifyers.R
\name{coo_slide}
\alias{coo_slide}
\title{Slide coordinates}
\usage{
coo_slide(
  x,
  id,
  ldk,
  from_col = coo,
  ldk_col = ldk,
  to_col = {     {         from_col     } },
  ...
)
}
\arguments{
\item{x}{\link{coo_single}, \link{coo_list} or \link{mom_tbl}}

\item{id}{\code{integer} which is (column row) should be used as the first point}

\item{ldk}{\code{integer} which landkmark should be used as the first point}

\item{from_col, ldk_col}{colnames from where to get the \link{coo_list}}

\item{to_col}{colname where to set the result (default to \code{from_col})
and how to name the resulting one (only for \link{mom_tbl} method)}

\item{...}{useless here}
}
\value{
a \link{coo_single}, \link{coo_list} or \link{mom_tbl}
}
\description{
Slides the coordinates so that the id-th coordinate,
or a particular landmark, become the first one.
}
\details{
For \link{mom_tbl} objects, three different flavours exist:
\itemize{
\item no ldk passed and a single id is passed: all id-th points
within the shapes will become the first points.
\item no ldk passed and a vector of ids of \code{nrow(x)}: for every shape,
the id-th point will be used as the id-th point.
\item a single ldk is passed: the ldk-th ldk will be used to slide every shape.
If an id is (also) passed, it is ignored with a message.
See examples.
}
}
\examples{
h <- hearts \%>\% dplyr::slice(1:5) # for speed sake
pile(h)

h \%>\% coo_slide(ldk=1) \%>\% pile()
}
\seealso{
Other coo_modifyers: 
\code{\link{coo_align}()},
\code{\link{coo_center}()},
\code{\link{coo_flip}},
\code{\link{coo_rev}()},
\code{\link{coo_rotatecenter}()},
\code{\link{coo_rotate}()},
\code{\link{coo_sample_rr}()},
\code{\link{coo_sample}()},
\code{\link{coo_scale}()},
\code{\link{coo_template}()},
\code{\link{coo_trans}()},
\code{\link{coo_trim}()},
\code{\link{coo_up}()}
}
\concept{coo_modifyers}
\concept{sliders}
