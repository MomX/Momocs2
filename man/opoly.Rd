% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/core_opoly.R
\name{opoly}
\alias{opoly}
\alias{opoly_i}
\title{Orthogonal polynomials}
\usage{
opoly(
  x,
  degree,
  raw,
  drop_coo,
  from_coo = coo,
  to_coe = {     {         coe     } },
  ...
)

opoly_i(x, nb_pts, from_coe, ...)
}
\arguments{
\item{x}{\link{coo_single}, \link{coo_list} or \link{mom_tbl}}

\item{degree}{polynomial degree for the fit (\code{degree+1}) coefficients are returned, see Details)}

\item{raw}{\code{logical} whether to return raw and full results}

\item{drop_coo}{\code{logical} whether to drop coo column (default to TRUE)}

\item{from_coo, to_coe}{column names}

\item{...}{for generics. Useless here.}

\item{nb_pts}{number of points to sample and on which to calculate polynomials}

\item{from_coe}{column name for inverse method}
}
\value{
a list with components when applied on a single shape:
\itemize{
\item \code{coeff} the coefficients (including the intercept)
\item \code{ortho} whether orthogonal or natural polynomials were fitted
\item \code{degree} degree of the fit (could be retrieved through \code{coeff} though)
\item \code{baseline1} the first baseline point (so far the first point)
\item \code{baseline2} the second baseline point (so far the last point)
\item \code{r2} the r2 from the fit
\item \code{mod} the raw lm model
}
}
\description{
Calculates orthogonal polynomial coefficients using \link[stats:lm]{stats::lm}
}
\details{
Curves must be registered on a bookstein baseline, with the first coordinates on (-0.5, 0)
and the last on (0.5, 0). Use \link{coo_bookstein}

A polynomial of degree \code{n} use this fit:

\eqn{y = a_{0} + a_{1}x^1 + a_{...}x^{...} + a_{n}x^{n}}

And thus returns \code{n+1} coefficients. The \code{+1} being $a_0$  ie the intercept.

Orthogonal polynomials are also called Legendre's polynomials. They are
preferred over natural polynomials since adding a degree does not
change lower order coefficients.

In retired Momocs, baseline was free and not necessarily Bookstein. Not sure this
was really helpful but I'm sure this overcomplicated coding. If your shapes are not
registered on Bookstein coordinates, you will be messaged (not for \link{coo_single} though)
}
\section{Functions}{
\itemize{
\item \code{opoly_i}: inverse opoly method
}}

\examples{

o <- olea \%>\% pick(5) \%>\% coo_bookstein()
o \%>\% pile()
op <- o \%>\% opoly(degree=3)
op
op \%>\% class

op \%>\% opoly_i() \%>\% draw()

olea \%>\% dplyr::slice(1:3) \%>\%
  opoly(drop=FALSE) \%>\% npoly_i
}
\seealso{
Other polynomials: 
\code{\link{npoly}()}

Other morphometrics: 
\code{\link{dfourier}()},
\code{\link{efourier}()},
\code{\link{npoly}()}
}
\concept{morphometrics}
\concept{polynomials}
